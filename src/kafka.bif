#
#  Licensed to the Apache Software Foundation (ASF) under one or more
#  contributor license agreements.  See the NOTICE file distributed with
#  this work for additional information regarding copyright ownership.
#  The ASF licenses this file to You under the Apache License, Version 2.0
#  (the "License"); you may not use this file except in compliance with
#  the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

module Kafka;

const kafka_conf: config;
const topic_name: string;
const max_wait_on_shutdown: count;
const tag_json: bool;
const json_timestamps: JSON::TimestampFormat;
const debug: string;

## Returns the effective kafka topic name given the provided three contributing
## configurations
##
## override: The override topic name.
##
## default: The default topic name.
##
## fallback: The fallback topic name.
##
## Returns: A string indicating the effective kafka topic name
function SelectTopicName%(override: string, default: string, fallback: string%) : string
	%{
	if ( ! override.empty() ) {
		/**
		 * Allow overriding of the kafka topic via the Bro script constant
		 * "topic_name" which can be applied in a Bro log filter's $conf
		 */
		return new StringVal(override);
	} else if ( default.empty() ) {
		// If no default topic name is defined, use the log filter's "path"
		return new StringVal(fallback);
	} else {
		/**
		 * When the default topic name is set and there is no override,
		 * use the default
		 */
		return new StringVal(default);
	}
	%}

